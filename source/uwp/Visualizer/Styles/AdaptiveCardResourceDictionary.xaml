<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:Styles="using:AdaptiveCardVisualizer.Styles">
    
    <!-- Destructive Buttons -->
    <Style x:Key="Adaptive.Action.Destructive" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource DestructiveButtonBackgroundBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="{StaticResource DefaultFontWeight}"/>
        <Setter Property="Foreground" Value="{ThemeResource DestructiveButtonForegroundBrush}"/>
        <Setter Property="HighContrastAdjustment" Value="None"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="OuterBorderElement.BorderBrush" Value="{ThemeResource DestructiveButtonBackgroundPointerOverBrush}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource DestructiveButtonBackgroundPointerOverBrush}"/>
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource DestructiveButtonBackgroundPointerOverBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource DestructiveButtonForegroundFocusedBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="OuterBorderElement.BorderBrush" Value="{ThemeResource DestructiveButtonBackgroundPressedBrush}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource DestructiveButtonBackgroundPressedBrush}"/>
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource DestructiveButtonBackgroundPressedBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource DestructiveButtonForegroundFocusedBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="OuterBorderElement.BorderBrush" Value="{ThemeResource FocusOutlineOuterBorderBrush}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource FocusOutlineInnerBorderBrush}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource DestructiveButtonBackgroundFocusedBrush}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource DestructiveButtonForegroundFocusedBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="OuterBorderElement.BorderBrush" Value="{ThemeResource DestructiveButtonBorderDisabledBrush}"/>
                                        <Setter Target="OuterBorderElement.Background" Value="{ThemeResource DestructiveButtonBackgroundDisabledBrush}"/>
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource DestructiveButtonBackgroundDisabledBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource DestructiveButtonForegroundDisabledBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            x:Name="OuterBorderElement"
                            CornerRadius="4"
                            BorderBrush="{ThemeResource DestructiveButtonBorderBrush}"
                            Background="{ThemeResource DestructiveButtonBackgroundBrush}"
                            BorderThickness="2">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                AutomationProperties.AccessibilityView="Raw"
                                Background="{TemplateBinding Background}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                BorderBrush="{ThemeResource FocusOutlineBorderUnfocusedBrush}"
                                BorderThickness="2"
                                FontSize="{TemplateBinding FontSize}"
                                HorizontalContentAlignment="Center"
                                Padding="8,1,8,4"
                                TextWrapping="WrapWholeWords"
                                VerticalContentAlignment="Center"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Buttons -->
    <Style x:Key="Adaptive.Action.Positive" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{ThemeResource PrimaryButtonForegroundBrush}"/>
        <Setter Property="HighContrastAdjustment" Value="None"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="OuterBorderElement.BorderBrush" Value="{ThemeResource PrimaryButtonBackgroundPointerOverBrush}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource PrimaryButtonBackgroundPointerOverBrush}"/>
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource PrimaryButtonBackgroundPointerOverBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryButtonForegroundFocusedBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="OuterBorderElement.BorderBrush" Value="{ThemeResource PrimaryButtonBackgroundPressedBrush}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource PrimaryButtonBackgroundPressedBrush}"/>
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource PrimaryButtonBackgroundPressedBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryButtonForegroundFocusedBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="OuterBorderElement.BorderBrush" Value="{ThemeResource FocusOutlineOuterBorderBrush}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource FocusOutlineInnerBorderBrush}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource PrimaryButtonBackgroundFocusedBrush}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryButtonForegroundFocusedBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="OuterBorderElement.BorderBrush" Value="{ThemeResource PrimaryButtonBorderDisabledBrush}"/>
                                        <Setter Target="OuterBorderElement.Background" Value="{ThemeResource PrimaryButtonBackgroundDisabledBrush}"/>
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource PrimaryButtonBackgroundDisabledBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryButtonForegroundDisabledBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            x:Name="OuterBorderElement"
                            CornerRadius="4"
                            BorderBrush="{ThemeResource PrimaryButtonBorderBrush}"
                            Background="{ThemeResource PrimaryButtonBackgroundBrush}"
                            BorderThickness="2">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                AutomationProperties.AccessibilityView="Raw"
                                Background="{TemplateBinding Background}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                BorderBrush="{ThemeResource FocusOutlineBorderUnfocusedBrush}"
                                BorderThickness="2"
                                FontSize="{TemplateBinding FontSize}"
                                HorizontalContentAlignment="Center"
                                Padding="8,1,8,4"
                                TextWrapping="WrapWholeWords"
                                VerticalContentAlignment="Center"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Adaptive.Action" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource SecondaryButtonBackgroundBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{ThemeResource SecondaryButtonForegroundBrush}"/>
        <Setter Property="HighContrastAdjustment" Value="None"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="UseSystemFocusVisuals" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource SecondaryButtonBorderPointerOverBrush}"/>
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource SecondaryButtonBackgroundPointerOverBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SecondaryButtonForegroundPointerOverBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource SecondaryButtonBackgroundPressedBrush}"/>
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource SecondaryButtonBorderPressedBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SecondaryButtonForegroundPressedBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource FocusOutlineOuterBorderBrush}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource SecondaryButtonBackgroundFocusedBrush}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SecondaryButtonForegroundFocusedBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SecondaryButtonForegroundDisabledBrush}"/>
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource SecondaryButtonDisabledBorderBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            CornerRadius="4"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{ThemeResource SecondaryButtonBorderBrush}"
                            BorderThickness="2"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            FontSize="{TemplateBinding FontSize}"
                            HorizontalContentAlignment="Center"
                            Padding="{TemplateBinding Padding}"
                            TextWrapping="WrapWholeWords"
                            VerticalContentAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Adaptive.Input.Date" TargetType="CalendarDatePicker">
        <Setter Property="Foreground" Value="{ThemeResource AdaptiveInputButtonForegroundBrush}"/>
        <Setter Property="Background" Value="{ThemeResource AdaptiveInputBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource AdaptiveInputBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Padding" Value="10,8,0,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDatePicker">
                    <Grid
                        x:Name="Root"
                        MinHeight="40">
                        <FlyoutBase.AttachedFlyout>
                            <Flyout Placement="Bottom">
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                    <ContentPresenter
                                                        Background="{TemplateBinding Background}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        Foreground="{ThemeResource AdaptiveInputButtonForegroundBrush}"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTransitions="{TemplateBinding ContentTransitions}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        Margin="{TemplateBinding Padding}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <CalendarView
                                    x:Name="CalendarView"
                                    CalendarIdentifier="{TemplateBinding CalendarIdentifier}"
                                    DisplayMode="{TemplateBinding DisplayMode}"
                                    DayOfWeekFormat="{}{dayofweek.abbreviated(3)}"
                                    FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                                    IsTodayHighlighted="False"
                                    IsOutOfScopeEnabled="{TemplateBinding IsOutOfScopeEnabled}"
                                    IsGroupLabelVisible="{TemplateBinding IsGroupLabelVisible}"
                                    MinDate="{TemplateBinding MinDate}"
                                    MaxDate="{TemplateBinding MaxDate}"
                                    OutOfScopeBackground="{ThemeResource AdaptiveCalendarOutOfScopeItemBackgroundBrush}"
                                    CalendarItemBackground="{ThemeResource AdaptiveCalendarCalendarItemBackgroundBrush}"
                                    DayItemFontSize="12"
                                    SelectedBorderBrush="{ThemeResource AdaptiveCalendarSelectedCalendarItemBorderBrush}"
                                    SelectedHoverBorderBrush="{ThemeResource AdaptiveCalendarSelectedCalendarItemBorderBrush}"
                                    SelectedPressedBorderBrush="{ThemeResource AdaptiveCalendarSelectedCalendarItemBorderBrush}"
                                    Style="{TemplateBinding CalendarViewStyle}"/>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Background.BorderBrush" Value="{ThemeResource AdaptiveInputBorderPointerOverBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="DateText.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="CalendarGlyph.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusBorder.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="DateText.Foreground" Value="{ThemeResource CalendarDatePickerTextForegroundSelected}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeaderStates">
                                <VisualState x:Name="TopHeader"/>
                                <VisualState x:Name="LeftHeader">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContentPresenter.(Grid.Row)" Value="1"/>
                                        <Setter Target="HeaderContentPresenter.(Grid.Column)" Value="0"/>
                                        <Setter Target="HeaderContentPresenter.(Grid.ColumnSpan)" Value="1"/>
                                        <Setter Target="HeaderContentPresenter.Margin" Value="{StaticResource CalendarDatePickerLeftHeaderMargin}"/>
                                        <Setter Target="HeaderContentPresenter.MaxWidth" Value="{StaticResource CalendarDatePickerLeftHeaderMaxWidth}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                            x:Name="HeaderContentPresenter"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Content="{TemplateBinding Header}"
                            Foreground="{ThemeResource AdaptiveInputButtonForegroundBrush}"
                            Grid.ColumnSpan="2"
                            Grid.Column="1"
                            Margin="{StaticResource CalendarDatePickerTopHeaderMargin}"
                            Grid.Row="0"
                            TextWrapping="Wrap"
                            VerticalAlignment="Top"
                            Visibility="Collapsed"
                            x:DeferLoadStrategy="Lazy"/>
                        <Border
                            x:Name="Background"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{ThemeResource AdaptiveInputBorderBrush}"
                            Grid.ColumnSpan="2"
                            Grid.Column="1"
                            Control.IsTemplateFocusTarget="True"
                            MinHeight="36"
                            Grid.Row="1"
                            CornerRadius="4"/>
                        <Border
                            x:Name="FocusBorder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="3"
                            BorderBrush="{ThemeResource AdaptiveInputBorderFocusedBrush}"
                            Background="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Visibility="Collapsed">
                            <Border
                                x:Name="InnerBackgroundBorder"
                                Padding="2"
                                BorderBrush="{ThemeResource AdaptiveInputInnerBorderFocusedBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"/>
                        </Border>
                        <TextBlock
                            x:Name="DateText"
                            Grid.Column="1"
                            Foreground="{ThemeResource AdaptiveInputButtonForegroundBrush}"
                            HorizontalAlignment="Left"
                            Padding="12,0,0,2"
                            Grid.Row="1"
                            FontSize="15"
                            Text="{TemplateBinding PlaceholderText}"
                            VerticalAlignment="Center"/>
                        <FontIcon
                            x:Name="CalendarGlyph"
                            Grid.Column="2"
                            Foreground="{ThemeResource AdaptiveInputButtonForegroundBrush}"
                            FontSize="15"
                            HorizontalAlignment="Center"
                            Grid.Row="1"
                            Style="{StaticResource CalendarDefaultFontIcon}"
                            VerticalAlignment="Center"/>
                        <ContentPresenter
                            x:Name="DescriptionPresenter"
                            AutomationProperties.AccessibilityView="Raw"
                            Content="{TemplateBinding Description}"
                            Grid.ColumnSpan="2"
                            Grid.Column="1"
                            Foreground="{ThemeResource AdaptiveInputButtonForegroundBrush}"
                            Grid.Row="2"
                            x:Load="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalendarDefaultFontIcon" TargetType="FontIcon" BasedOn="{StaticResource DefaultFontIcon}">
        <Setter Property="Glyph" Value="{StaticResource CalendarGlyph}"/>
    </Style>

    <Style x:Key="DefaultFontIcon" TargetType="FontIcon">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
    </Style>

    <x:Double x:Key="DefaultFontSize">14</x:Double>
    <x:String x:Key="CalendarGlyph">&#xE787;</x:String>
    <x:String x:Key="DefaultFontWeight">Normal</x:String>

    <Style x:Key="Adaptive.Input.Time" TargetType="TimePicker">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Foreground" Value="{ThemeResource AdaptiveInputForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HighContrastAdjustment" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TimePicker">
                    <Grid
                        x:Name="LayoutRoot"
                        Margin="{TemplateBinding Padding}">
                        <Grid.Resources>
                            <Style x:Key="TimePickerFlyoutButtonStyle" TargetType="Button">
                                <Setter Property="UseSystemFocusVisuals" Value="False"/>
                                <Setter Property="ElementSoundMode" Value="FocusOnly"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid
                                                Name="ButtonLayoutRoot"
                                                BorderBrush="{ThemeResource AdaptiveInputBorderBrush}"
                                                BorderThickness="2"
                                                CornerRadius="4"
                                                Background="{TemplateBinding Background}">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal">
                                                            <VisualState.Setters>
                                                                <Setter Target="ButtonLayoutRoot.BorderBrush" Value="{ThemeResource AdaptiveInputBorderBrush}"/>
                                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource AdaptiveInputBorderHighContrastBrush}"/>
                                                                <Setter Target="ContentPresenter.Background" Value="{ThemeResource AdaptiveInputBackgroundBrush}"/>
                                                                <Setter Target="ContentPresenter.CornerRadius" Value="0"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="PointerOver">
                                                            <VisualState.Setters>
                                                                <Setter Target="ButtonLayoutRoot.BorderBrush" Value="{ThemeResource AdaptiveInputBorderPointerOverBrush}"/>
                                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource AdaptiveInputBorderPointerOverHighContrastBrush}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed"/>
                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <VisualState.Setters>
                                                                <Setter Target="ButtonLayoutRoot.BorderBrush" Value="{ThemeResource AdaptiveInputBorderFocusedBrush}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused"/>
                                                        <VisualState x:Name="FocusedPointerOver">
                                                            <VisualState.Setters>
                                                                <Setter Target="ButtonLayoutRoot.BorderBrush" Value="{ThemeResource AdaptiveInputBorderFocusedBrush}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <ContentPresenter
                                                    x:Name="ContentPresenter"
                                                    AutomationProperties.AccessibilityView="Raw"
                                                    Content="{TemplateBinding Content}"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Stretch"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContentPresenter.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="FirstColumnDivider.Fill" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="SecondColumnDivider.Fill" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HasTimeStates">
                                <VisualState x:Name="HasTime"/>
                                <VisualState x:Name="HasNoTime">
                                    <VisualState.Setters>
                                        <Setter Target="HourTextBlock.Foreground" Value="{ThemeResource TextControlPlaceholderForeground}"/>
                                        <Setter Target="MinuteTextBlock.Foreground" Value="{ThemeResource TextControlPlaceholderForeground}"/>
                                        <Setter Target="PeriodTextBlock.Foreground" Value="{ThemeResource TextControlPlaceholderForeground}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                            x:Name="HeaderContentPresenter"
                            AutomationProperties.AccessibilityView="Raw"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Content="{TemplateBinding Header}"
                            Foreground="{ThemeResource TimePickerHeaderForeground}"
                            HorizontalAlignment="Stretch"
                            Margin="{StaticResource TimePickerTopHeaderMargin}"
                            MaxWidth="{StaticResource TimePickerThemeMaxWidth}"
                            Grid.Row="0"
                            TextWrapping="Wrap"
                            VerticalAlignment="Top"
                            Visibility="Collapsed"/>
                        <Button
                            x:Name="FlyoutButton"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            IsEnabled="{TemplateBinding IsEnabled}"
                            Grid.Row="1" 
                            Style="{StaticResource TimePickerFlyoutButtonStyle}"
                            UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"
                            VerticalAlignment="Top">
                            <!--<i:Interaction.Behaviors>
                                <i:BehaviorCollection>
                                    <behaviors:PointerAndFocusStateManagerBehavior
                                        NormalFocusStateName="Normal"
                                        FocusStateName="Focused"
                                        PointerOverStateName="PointerOver"
                                        FocusedPointerOverStateName="FocusedPointerOver"
                                        DesiredFocusState="Keyboard"/>
                                </i:BehaviorCollection>
                            </i:Interaction.Behaviors>-->
                            <Grid x:Name="FlyoutButtonContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="FirstTextBlockColumn" Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition x:Name="SecondTextBlockColumn" Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition x:Name="ThirdTextBlockColumn" Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border
                                    x:Name="FirstPickerHost"
                                    Grid.Column="0">
                                    <TextBlock
                                        x:Name="HourTextBlock"
                                        AutomationProperties.AccessibilityView="Raw"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="15"
                                        Padding="0,7,0,7"
                                        VerticalAlignment="Center"
                                        TextAlignment="Center"/>
                                </Border>
                                <Rectangle
                                    x:Name="FirstColumnDivider"
                                    Grid.Column="1"
                                    Fill="{ThemeResource TimePickerSpacerFill}"
                                    HorizontalAlignment="Center"
                                    Width="2"/>
                                <Border
                                    x:Name="SecondPickerHost"
                                    Grid.Column="2">
                                    <TextBlock
                                        x:Name="MinuteTextBlock"
                                        AutomationProperties.AccessibilityView="Raw"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="15"
                                        Padding="0,7,0,7"
                                        VerticalAlignment="Center"
                                        TextAlignment="Center"/>
                                </Border>
                                <Rectangle
                                    x:Name="SecondColumnDivider"
                                    Grid.Column="3"
                                    Fill="{ThemeResource TimePickerSpacerFill}"
                                    HorizontalAlignment="Center"
                                    Width="2"/>
                                <Border
                                    x:Name="ThirdPickerHost"
                                    Grid.Column="4">
                                    <TextBlock
                                        x:Name="PeriodTextBlock"
                                        AutomationProperties.AccessibilityView="Raw"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="15"
                                        Padding="0,7,0,7"
                                        VerticalAlignment="Center"
                                        TextAlignment="Center"/>
                                </Border>
                            </Grid>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Adaptive.Input.Text" TargetType="TextBox">
        <Setter Property="Foreground" Value="{ThemeResource AdaptiveInputForegroundBrush}"/>
        <Setter Property="Background" Value="{ThemeResource AdaptiveInputBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource AdaptiveInputBorderBrush}"/>
        <Setter Property="SelectionHighlightColor" Value="{ThemeResource AdaptiveInputSelectionHighlightBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid
                                                x:Name="ButtonLayoutGrid"
                                                Background="{ThemeResource TextControlButtonBackground}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{ThemeResource TextControlButtonBorderBrush}"
                                                CornerRadius="4">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="PointerOver">
                                                            <VisualState.Setters>
                                                                <Setter Target="ButtonLayoutGrid.Background" Value="{ThemeResource TextControlButtonBackgroundPointerOver}"/>
                                                                <Setter Target="GlyphElement.Foreground" Value="{ThemeResource DeleteButtonUserInputTextBoxForegroundPointerOverBrush}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <VisualState.Setters>
                                                                <Setter Target="ButtonLayoutGrid.Background" Value="{ThemeResource DeleteButtonUserInputTextBoxBackgroundBrush}"/>
                                                                <Setter Target="GlyphElement.Foreground" Value="{ThemeResource DeleteButtonUserInputTextBoxForegroundPressedBrush}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="ButtonLayoutGrid.Opacity" Value="0" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <FontIcon
                                                    x:Name="GlyphElement"
                                                    AutomationProperties.AccessibilityView="Raw"
                                                    FontStyle="Normal"
                                                    Foreground="{ThemeResource DeleteButtonUserInputTextBoxForegroundBrush}"
                                                    HorizontalAlignment="Center"
                                                    Style="{StaticResource CancelMediumFontIcon}"
                                                    VerticalAlignment="Center"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="BorderElement.Background" Value="{ThemeResource AdaptiveInputBackgroundBrush}"/>
                                        <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource AdaptiveInputBorderBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContentPresenter.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="ContentElement.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="PlaceholderTextContentPresenter.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource AdaptiveInputBorderPointerOverBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="BorderElement.BorderBrush" Value="{ThemeResource AdaptiveInputBorderFocusedBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible">
                                    <VisualState.Setters>
                                        <Setter Target="DeleteButton.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ButtonCollapsed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                            x:Name="HeaderContentPresenter"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Content="{TemplateBinding Header}"
                            Grid.ColumnSpan="2"
                            Grid.Column="0"
                            FontWeight="Normal"
                            Foreground="{ThemeResource TextControlHeaderForeground}"
                            Margin="{StaticResource TextBoxTopHeaderMargin}"
                            Grid.Row="0"
                            TextWrapping="Wrap"
                            VerticalAlignment="Top"
                            Visibility="Collapsed"
                            x:DeferLoadStrategy="Lazy"/>
                        <Border
                            x:Name="BorderElement"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Grid.ColumnSpan="2"
                            Grid.Column="0"
                            Control.IsTemplateFocusTarget="True"
                            MinHeight="{ThemeResource TextControlThemeMinHeight}"
                            MinWidth="{ThemeResource TextControlThemeMinWidth}"
                            Grid.RowSpan="1"
                            Grid.Row="1"/>
                        <ScrollViewer
                            x:Name="ContentElement"
                            AutomationProperties.AccessibilityView="Raw"
                            Grid.Column="0"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsTabStop="False"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="10,8,0,8"
                            Grid.Row="1"
                            FontSize="16"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            ZoomMode="Disabled"/>
                        <TextBlock
                            x:Name="PlaceholderTextContentPresenter"
                            Grid.ColumnSpan="2"
                            Grid.Column="0"
                            Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}"
                            IsHitTestVisible="False"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="10,8,0,8"
                            Grid.Row="1"
                            FontSize="15"
                            Text="{TemplateBinding PlaceholderText}"
                            TextWrapping="{TemplateBinding TextWrapping}"
                            TextAlignment="{TemplateBinding TextAlignment}"/>
                        <Button
                            x:Name="DeleteButton"
                            AutomationProperties.AccessibilityView="Raw"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Grid.Column="1"
                            FontSize="{TemplateBinding FontSize}"
                            IsTabStop="False"
                            MinWidth="34"
                            Margin="{ThemeResource HelperButtonThemePadding}"
                            Grid.Row="1"
                            Style="{StaticResource DeleteButtonStyle}"
                            VerticalAlignment="Stretch"
                            Visibility="Collapsed"/>
                        <ContentPresenter
                            x:Name="DescriptionPresenter"
                            AutomationProperties.AccessibilityView="Raw"
                            Content="{TemplateBinding Description}"
                            Grid.ColumnSpan="2"
                            Grid.Column="0"
                            Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}"
                            Grid.Row="2"
                            x:Load="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelMediumFontIcon" TargetType="FontIcon" BasedOn="{StaticResource MediumFontIcon}">
        <Setter Property="Glyph" Value="{StaticResource CancelGlyph}"/>
    </Style>

    <Style x:Key="MediumFontIcon" TargetType="FontIcon">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
    </Style>

    <x:Double x:Key="MediumFontSize">16</x:Double>
    <x:String x:Key="CancelGlyph">&#xE711;</x:String>

    <Style x:Key="Adaptive.Input.ChoiceSet.Compact" TargetType="ComboBox">
        <Setter Property="Foreground" Value="{ThemeResource AdaptiveInputForegroundBrush}"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource AdaptiveComboBoxItemStyle}"/>
        <Setter Property="HighContrastAdjustment" Value="None"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel MinWidth="340"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="LayoutRoot">
                        <Grid.Resources>
                            <Storyboard x:Key="OverlayOpeningAnimation">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                    <DiscreteDoubleKeyFrame
                                        KeyTime="0:0:0"
                                        Value="0.0"/>
                                    <SplineDoubleKeyFrame
                                        KeySpline="0.1,0.9 0.2,1.0"
                                        KeyTime="0:0:0.383"
                                        Value="1.0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OverlayClosingAnimation">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                    <DiscreteDoubleKeyFrame
                                        KeyTime="0:0:0"
                                        Value="1.0"/>
                                    <SplineDoubleKeyFrame
                                        KeySpline="0.1,0.9 0.2,1.0"
                                        KeyTime="0:0:0.216"
                                        Value="0.0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="64"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ContentPresenter
                            x:Name="HeaderContentPresenter"
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="{StaticResource ComboBoxTopHeaderMargin}"
                            VerticalAlignment="Top"
                            x:DeferLoadStrategy="Lazy"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            FlowDirection="{TemplateBinding FlowDirection}"
                            FontSize="14"
                            FontWeight="{ThemeResource ComboBoxHeaderThemeFontWeight}"
                            LineHeight="{StaticResource DefaultLineHeight}"
                            TextWrapping="Wrap"
                            Visibility="Collapsed"/>
                        <Border
                            x:Name="Background"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            MinWidth="{ThemeResource ComboBoxThemeMinWidth}"
                            MinHeight="40"
                            Background="{ThemeResource AdaptiveInputBackgroundBrush}"
                            BorderBrush="{ThemeResource AdaptiveInputBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Control.IsTemplateFocusTarget="True"
                            CornerRadius="4"/>
                        <Border
                            x:Name="FocusBorder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            BorderBrush="{ThemeResource AdaptiveInputBorderFocusedBrush}"
                            Background="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Visibility="Collapsed">
                            <Border
                                x:Name="InnerBackgroundBorder"
                                Padding="2"
                                BorderBrush="{ThemeResource AdaptiveInputInnerBorderFocusedBrush}"
                                BorderThickness="2"
                                CornerRadius="4"/>
                        </Border>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{ThemeResource AdaptiveInputButtonForegroundBrush}">
                            <TextBlock
                                x:Name="PlaceholderTextBlock"
                                Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource ComboBoxPlaceHolderForeground}}"
                                Text="{TemplateBinding PlaceholderText}"/>
                        </ContentPresenter>
                        <TextBox
                            x:Name="EditableText"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Margin="0"
                            Padding="10,3,30,5"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            BorderBrush="Transparent"
                            Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource ComboBoxPlaceHolderForeground}}"
                            PlaceholderText="{TemplateBinding PlaceholderText}"
                            Style="{StaticResource ComboBoxTextBoxStyle}"
                            Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="Collapsed"/>
                        <Border
                            x:Name="DropDownOverlay"
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="0"
                            x:Load="False"
                            Background="{ThemeResource AdaptiveInputBackgroundBrush}"
                            Visibility="Collapsed"/>
                        <FontIcon
                            x:Name="DropDownGlyph"
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="0,0,10,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            AutomationProperties.AccessibilityView="Raw"
                            Style="{StaticResource ChevronDownMediumFontIcon}"
                            Foreground="{ThemeResource AdaptiveInputButtonForegroundBrush}"
                            IsHitTestVisible="False"/>
                        <ContentPresenter
                            x:Name="DescriptionPresenter"
                            Grid.Row="2"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Content="{TemplateBinding Description}"
                            Foreground="{ThemeResource AdaptiveInputForegroundBrush}"/>
                        <Popup
                            x:Name="Popup"
                            Margin="-3,-1,0,0">
                            <Border
                                x:Name="PopupBorder"
                                Margin="0,-2,0,0"
                                HorizontalAlignment="Stretch"
                                Background="{ThemeResource AdaptiveDropDownBackgroundBrush}"
                                BorderBrush="{ThemeResource AdaptiveDropDownBorderBrush}"
                                BorderThickness="0"
                                CornerRadius="4">
                                <ScrollViewer
                                    x:Name="ScrollViewer"
                                    MinWidth="{Binding TemplateSettings.DropDownContentMinWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                    Foreground="{ThemeResource ComboBoxDropDownForeground}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                    IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                    IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                    IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                    VerticalSnapPointsAlignment="Near"
                                    VerticalSnapPointsType="OptionalSingle"
                                    ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="Background.Background" Value="{ThemeResource AdaptiveInputBackgroundBrush}"/>
                                        <Setter Target="Background.BorderBrush" Value="{ThemeResource AdaptiveInputBorderBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Background.BorderBrush" Value="{ThemeResource AdaptiveInputBorderPointerOverBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContentPresenter.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="PlaceholderTextBlock.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="DropDownGlyph.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="Background.BorderBrush" Value="{ThemeResource AdaptiveInputBorderDisabledBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <VisualState.Setters>
                                        <Setter Target="FocusBorder.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <VisualState.Setters>
                                        <Setter Target="PopupBorder.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <SplitOpenThemeAnimation
                                            ClosedTargetName="ContentPresenter"
                                            OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            OpenedTargetName="PopupBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation
                                            ClosedTargetName="ContentPresenter"
                                            OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            OpenedTargetName="PopupBorder"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditableModeStates">
                                <VisualState x:Name="TextBoxFocused"/>
                                <VisualState x:Name="TextBoxFocusedOverlayPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="DropDownOverlay.Background" Value="{ThemeResource AdaptiveInputBackgroundPointerOverBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TextBoxFocusedOverlayPressed"/>
                                <VisualState x:Name="TextBoxOverlayPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="DropDownOverlay.Background" Value="{ThemeResource AdaptiveInputBackgroundPointerOverBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TextBoxOverlayPressed"/>
                                <VisualState x:Name="TextBoxUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChevronDownMediumFontIcon" TargetType="FontIcon" BasedOn="{StaticResource MediumFontIcon}">
        <Setter Property="Glyph" Value="{StaticResource ChevronDownGlyph}"/>
    </Style>

    <x:String x:Key="ChevronDownGlyph">&#xE70D;</x:String>
    <x:Double x:Key="DefaultLineHeight">20</x:Double>

    <Style x:Key="AdaptiveComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="{ThemeResource AdaptiveInputForegroundBrush}"/>
        <Setter Property="Background" Value="{ThemeResource AdaptiveDropDownBackgroundPointerOverBrush}"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="HighContrastAdjustment" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid
                        x:Name="LayoutRoot"
                        Padding="0,3,0,4"
                        Background="{ThemeResource AdaptiveDropDownBackgroundBrush}"
                        BorderBrush="{ThemeResource AdaptiveDropDownBorderBrush}"
                        BorderThickness="2"
                        Control.IsTemplateFocusTarget="True"
                        CornerRadius="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Grid.Column="0"
                            Margin="9,0,4,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            BorderThickness="2"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Foreground="{ThemeResource AdaptiveInputForegroundBrush}"/>
                        <FontIcon
                            Name="SelectedItemCheck"
                            Grid.Column="1"
                            Margin="0,0,8,0"
                            HighContrastAdjustment="None"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Style="{StaticResource CheckMarkMediumFontIcon}"
                            Visibility="Collapsed"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource AdaptiveDropDownBackgroundPointerOverBrush}"/>
                                        <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource AdaptiveDropDownBorderPointerOverBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AdaptiveDropDownForegroundPointerOverBrush}"/>
                                        <Setter Target="SelectedItemCheck.Foreground" Value="{ThemeResource AdaptiveDropDownForegroundPointerOverBrush}"/>
                                        <Setter Target="SelectedItemCheck.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="SelectedItemCheck.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="SelectedItemCheck.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AdaptiveDropDownForegroundPointerOverBrush}"/>
                                        <Setter Target="SelectedItemCheck.Foreground" Value="{ThemeResource AdaptiveDropDownForegroundPointerOverBrush}"/>
                                        <Setter Target="SelectedItemCheck.Visibility" Value="Visible"/>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource AdaptiveDropDownBackgroundSelectedBrush}"/>
                                        <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource AdaptiveDropDownBorderSelectedOverBrush}"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <VisualState.Setters>
                                        <Setter Target="SelectedItemCheck.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SelectedDisabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="SelectedItemCheck.Foreground" Value="{ThemeResource AdaptiveInputForegroundDisabledBrush}"/>
                                        <Setter Target="SelectedItemCheck.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource AdaptiveDropDownBackgroundSelectedPointerOverBrush}"/>
                                        <Setter Target="LayoutRoot.BorderBrush" Value="{ThemeResource AdaptiveDropDownBorderSelectedPointerOverBrush}"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AdaptiveDropDownForegroundPointerOverBrush}"/>
                                        <Setter Target="SelectedItemCheck.Foreground" Value="{ThemeResource AdaptiveDropDownForegroundPointerOverBrush}"/>
                                        <Setter Target="LayoutRoot.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="SelectedItemCheck.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="LayoutRoot"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <VisualState.Setters>
                                        <Setter Target="SelectedItemCheck.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InputModeStates">
                                <VisualState x:Name="InputModeDefault"/>
                                <VisualState x:Name="TouchInputMode">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource ComboBoxItemRevealThemeTouchPadding}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="GameControllerInputMode">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource ComboBoxItemRevealThemeGameControllerPadding}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckMarkMediumFontIcon" TargetType="FontIcon" BasedOn="{StaticResource MediumFontIcon}">
        <Setter Property="Glyph" Value="{StaticResource CheckMarkGlyph}"/>
    </Style>

    <x:String x:Key="CheckMarkGlyph">&#xE73E;</x:String>

    <SolidColorBrush x:Key="DestructiveButtonForegroundBrush" Color="{StaticResource AltLight}"/>
    <SolidColorBrush x:Key="DestructiveButtonForegroundFocusedBrush" Color="{StaticResource AltLight}"/>
    <SolidColorBrush x:Key="DestructiveButtonForegroundDisabledBrush" Color="{StaticResource BaseAltMedium}"/>
    <SolidColorBrush x:Key="DestructiveButtonBackgroundBrush" Color="{StaticResource RedHigh}"/>
    <SolidColorBrush x:Key="DestructiveButtonBackgroundPointerOverBrush" Color="{StaticResource RedMedium}"/>
    <SolidColorBrush x:Key="DestructiveButtonBackgroundPressedBrush" Color="{StaticResource BaseAltMedium}"/>
    <SolidColorBrush x:Key="DestructiveButtonBackgroundDisabledBrush" Color="{StaticResource BaseLow}"/>
    <SolidColorBrush x:Key="DestructiveButtonBackgroundFocusedBrush" Color="{StaticResource RedHigh}"/>
    <SolidColorBrush x:Key="DestructiveButtonBorderDisabledBrush" Color="{StaticResource BaseLow}"/>
    <SolidColorBrush x:Key="DestructiveButtonBorderBrush" Color="{StaticResource RedHigh}"/>

    <Color x:Key="RedHigh">#D83B01</Color>
    <Color x:Key="RedMedium">#C23501</Color>
    <Color x:Key="AltLight">White</Color>

    <!--Global Brushes-->
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="WindowForegroundBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="RootGridBackgroundBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="TransparentBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="TopButtonBackgroundPointerOverBrush" Color="{StaticResource AltMediumDark}" />
        <SolidColorBrush x:Key="TopButtonForegroundPointerOverBrush" Color="{StaticResource BaseHigh}" />
        <SolidColorBrush x:Key="TopButtonForegroundDisabledBrush" Color="{StaticResource BaseMediumLow}" />
        <SolidColorBrush x:Key="TopButtonBackgroundDisabledBrush" Color="Transparent" />
        <SolidColorBrush x:Key="TopButtonBackgroundBrush" Color="Transparent" />
        <SolidColorBrush x:Key="TopButtonForegroundBrush" Color="{StaticResource BaseHigh}" />
        <SolidColorBrush x:Key="TopButtonForegroundPointerPressedBrush" Color="{StaticResource BaseHigh}" />
        <SolidColorBrush x:Key="TopButtonBackgroundPointerPressedBrush" Color="{StaticResource ChromeAltHigh}" />
        <SolidColorBrush x:Key="FocusOutlineOuterBorderBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="FocusOutlineInnerBorderBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="FocusOutlineBorderUnfocusedBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="CortanaLogoOuterBorderBrush" Color="{StaticResource CortanaAccent}" Opacity="0.4"/>
        <SolidColorBrush x:Key="CortanaLogoInnerBorderBrush" Color="{StaticResource CortanaAccent}"/>
        <SolidColorBrush x:Key="DivideRectangleBrush" Color="{StaticResource BaseLow}"/>
        <SolidColorBrush x:Key="LoadingDividerBrush" Color="{StaticResource BaseLow}"/>

        <LinearGradientBrush x:Key="ConversationWindowTopRectangleFillBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="{StaticResource AltHigh}" Offset="0" />
            <GradientStop Color="{StaticResource AltHighTransparent}" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SuggestionsRightButtonRectangleFillBrush" StartPoint="0.5,0.5" EndPoint="0,0.5">
            <GradientStop Color="{StaticResource AltHigh}" Offset="0" />
            <GradientStop Color="{StaticResource AltHighTransparent}" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SuggestionsLeftButtonRectangleFillBrush" StartPoint="0.5,0.5" EndPoint="1.0,0.5">
            <GradientStop Color="{StaticResource AltHigh}" Offset="0" />
            <GradientStop Color="{StaticResource AltHighTransparent}" Offset="1" />
        </LinearGradientBrush>

        <!--Shared Components-->
        <SolidColorBrush x:Key="PrimaryButtonForegroundBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="PrimaryButtonForegroundFocusedBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="PrimaryButtonForegroundDisabledBrush" Color="{StaticResource AltMedium}"/>
        <SolidColorBrush x:Key="PrimaryButtonBackgroundBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="PrimaryButtonBackgroundPointerOverBrush" Color="{StaticResource BaseAltHigh}"/>
        <SolidColorBrush x:Key="PrimaryButtonBackgroundPressedBrush" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="PrimaryButtonBackgroundDisabledBrush" Color="{StaticResource BaseLow}"/>
        <SolidColorBrush x:Key="PrimaryButtonBackgroundFocusedBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="PrimaryButtonBorderDisabledBrush" Color="{StaticResource BaseLow}"/>
        <SolidColorBrush x:Key="PrimaryButtonBorderBrush" Color="{StaticResource BaseMediumHigh}"/>

        <SolidColorBrush x:Key="SecondaryButtonForegroundBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="SecondaryButtonForegroundPointerOverBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="SecondaryButtonForegroundPressedBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="SecondaryButtonForegroundDisabledBrush" Color="{StaticResource ChromeAltMedium}"/>
        <SolidColorBrush x:Key="SecondaryButtonForegroundFocusedBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="SecondaryButtonBackgroundBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="SecondaryButtonBackgroundPointerOverBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="SecondaryButtonBackgroundPressedBrush" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="SecondaryButtonBackgroundFocusedBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="SecondaryButtonBorderBrush" Color="{StaticResource ChromeAltHigh}"/>
        <SolidColorBrush x:Key="SecondaryButtonBorderPointerOverBrush" Color="{StaticResource BaseMedium}"/>
        <SolidColorBrush x:Key="SecondaryButtonBorderPressedBrush" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="SecondaryButtonDisabledBorderBrush" Color="{StaticResource ChromeLow}"/>

        <SolidColorBrush x:Key="HyperlinkButtonBackgroundBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="HyperlinkForegroundBrush" Color="{StaticResource CortanaAccentLow}"/>
        <SolidColorBrush x:Key="HyperlinkForegroundPointerOverBrush" Color="{StaticResource BaseHigh}" Opacity="0.6"/>
        <SolidColorBrush x:Key="HyperlinkForegroundPressedBrush" Color="{StaticResource BaseHigh}" Opacity="0.4"/>
        <SolidColorBrush x:Key="HyperlinkForegroundDisabledBrush" Color="{StaticResource BaseHigh}" Opacity="0.4"/>

        <SolidColorBrush x:Key="RadioButtonOuterEllipseStrokeBrush" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="RadioButtonOuterEllipsePressedStrokeBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="RadioButtonCheckedOuterEllipseStrokeBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="RadioButtonCheckGlyphFillBrush" Color="{StaticResource BaseMediumHigh}"/>

        <!--User input button-->
        <SolidColorBrush x:Key="UserInputButtonBorderBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="UserInputButtonBackgroundBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="UserInputButtonBackgroundPointerOverBrush" Color="{StaticResource AltMediumDark}"/>
        <SolidColorBrush x:Key="UserInputButtonBackgroundPressedBrush" Color="{StaticResource ChromeAltHigh}"/>
        <SolidColorBrush x:Key="UserInputButtonBackgroundDisabledBrush" Color="{StaticResource ChromeLow}"/>

        <SolidColorBrush x:Key="UserInputButtonForegroundBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="UserInputButtonForegroundPointerOverBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="UserInputButtonForegroundPressedBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="UserInputButtonForegroundDisabledBrush" Color="{StaticResource BaseHigh}" Opacity="0.4"/>

        <!--Input text box-->
        <SolidColorBrush x:Key="UserInputRectanglePointerOverBrush" Color="{StaticResource BaseLow}"/>

        <SolidColorBrush x:Key="UserInputTextBoxBorderPointerOverBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="UserInputTextBoxBackgroundBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="UserInputTextBoxForegroundBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="UserInputTextBoxSelectionHighlightBrush" Color="{StaticResource ChromeAltLow}" />
        <SolidColorBrush x:Key="UserInputTextBoxPlaceholderTextBrush" Color="{StaticResource ChromeAltMedium}"/>

        <SolidColorBrush x:Key="DeleteButtonUserInputTextBoxForegroundBrush" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="DeleteButtonUserInputTextBoxForegroundPointerOverBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="DeleteButtonUserInputTextBoxForegroundFocusedBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="DeleteButtonUserInputTextBoxForegroundPressedBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="DeleteButtonUserInputTextBoxBackgroundBrush" Color="{StaticResource BaseLow}"/>

        <LinearGradientBrush x:Key="UserInputTextBoxFadeBackgroundBrush" EndPoint="0.5,0.5" StartPoint="1,0.5">
            <GradientStop Color="{StaticResource AltHighTransparent}" Offset="0" />
            <GradientStop Color="{StaticResource AltHigh}" Offset="1" />
        </LinearGradientBrush>

        <!--User and Cortana conversation message-->
        <SolidColorBrush x:Key="UserTextBlockBorderBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="UserTextBlockBorderPointerOverBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="UserTextBlockBorderDisabledBrush" Color="{StaticResource ChromeLow}" Opacity="0.8"/>
        <SolidColorBrush x:Key="UserTextBlockBackgroundBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="UserTextBlockBackgroundPointerOverBrush" Color="{StaticResource ChromeMediumLow}"/>
        <SolidColorBrush x:Key="UserTextBlockBackgroundDisabledBrush" Color="Transparent" />
        <SolidColorBrush x:Key="UserTextBlockBackgroundLoadingBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="UserTextBlockSelectionHighlightBrush" Color="{StaticResource ChromeAltLow}" />
        <SolidColorBrush x:Key="UserTextBlockForegroundBrush" Color="{StaticResource BaseHigh}" />
        <SolidColorBrush x:Key="UserTextBlockForegroundDisabledBrush" Color="{StaticResource BaseHigh}" Opacity="0.8" />

        <SolidColorBrush x:Key="CortanaTextBlockBorderBrush" Color="{StaticResource ChromeMediumLow}"/>
        <SolidColorBrush x:Key="CortanaTextBlockBorderPointerOverBrush" Color="{StaticResource BaseLow}"/>
        <SolidColorBrush x:Key="CortanaTextBlockBorderDisabledBrush" Color="{StaticResource ChromeMediumLow}" Opacity="0.8"/>
        <SolidColorBrush x:Key="CortanaTextBlockBackgroundBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="CortanaTextBlockBackgroundPointerOverBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="CortanaTextBlockLoadingBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="CortanaTextBlockSelectionHighlightBrush" Color="{StaticResource ChromeAltLow}"/>
        <SolidColorBrush x:Key="CortanaTextTextBlockForegroundBrush" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="CortanaTextTextBlockForegroundPointerOverBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="CortanaTextTextBlockForegroundDisabledBrush" Color="{StaticResource BaseAltMedium}" Opacity="0.8"/>

        <SolidColorBrush x:Key="TextTextBlockForegroundBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="TextTextBlockForegroundBrushDisabled" Color="{StaticResource BaseHigh}" Opacity="0.4"/>

        <!--Adaptive card-->
        <Color x:Key="DropShadowPanelColor">Black</Color>
        <SolidColorBrush x:Key="AdaptiveCardControlBorderBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="AdaptiveCardControlBackgroundBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="AdaptiveCardAttributionSeparatorBrush" Color="{StaticResource ChromeMediumLow}"/>
        <SolidColorBrush x:Key="AdaptiveCardAttributionBackgroundBrush" Color="{StaticResource ChromeMediumDark}"/>
        <SolidColorBrush x:Key="AdaptiveCardAttributionBackgroundPointerOverBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="AdaptiveCardAttributionForegroundBrush" Color="{StaticResource BaseHigh}"/>

        <!-- Listening Icon -->
        <SolidColorBrush x:Key="ListeningIconForegroundBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="ListeningIconBackgroundBrush" Color="{StaticResource BaseHighTransparent}" />

        <!--Debug-->
        <SolidColorBrush x:Key="DebugButtonBackgroundBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="DebugButtonForegroundBrush" Color="{StaticResource BaseHigh}" Opacity="0.5"/>

        <!--AuthWebView-->
        <Color x:Key="DefaultWebViewBackgroundColor">Black</Color>
        <SolidColorBrush x:Key="AuthWebViewRetryButtonBackgroundBrush" Color="{StaticResource ChromeMediumDark}"/>
        <SolidColorBrush x:Key="AuthWebViewRetryButtonForegroundBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="AuthWebViewRetryButtonSecondaryForegroundBrush" Color="{StaticResource BaseMedium}"/>

        <!-- Main Menu -->
        <SolidColorBrush x:Key="MenuPointerOverBackgroundBrush" Color="{StaticResource AltMediumDark}" />
        <SolidColorBrush x:Key="MenuPointerOverForegroundBrush" Color="{StaticResource BaseHigh}" />
        <SolidColorBrush x:Key="MenuPointerPressedBackgroundBrush" Color="{StaticResource ChromeAltHigh}" />
        <SolidColorBrush x:Key="MenuDisabledForgroundBrush" Color="{StaticResource ChromeAltMedium}" />
        <SolidColorBrush x:Key="MenuPopupBackgroundBrush" Color="{StaticResource ChromeHigh}" />
        <SolidColorBrush x:Key="MenuBorderBrush" Color="{StaticResource ChromeHigh}" />
        <SolidColorBrush x:Key="MenuSubTextForegroundBrush" Color="{StaticResource BaseAltMedium}" />

        <!--Settings Menu-->
        <SolidColorBrush x:Key="SettingsMenuBorderBrush" Color="{StaticResource AltMediumHigh}" />
        <SolidColorBrush x:Key="SettingsMenuPointerOverBorderBrush" Color="{StaticResource ChromeAltHigh}" />
        <SolidColorBrush x:Key="SettingsMenuPressedBorderBrush" Color="{StaticResource BaseAltMedium}" />
        <SolidColorBrush x:Key="SettingsMenuSelectedBorderBrush" Color="{StaticResource AltAltMedium}" />

        <SolidColorBrush x:Key="SettingsMenuBackgroundBrush" Color="{StaticResource AltMediumHigh}"/>
        <SolidColorBrush x:Key="SettingsMenuPointerOverBackgroundBrush" Color="{StaticResource AltMediumHigh}"/>
        <SolidColorBrush x:Key="SettingsMenuPressedBackgroundBrush" Color="{StaticResource BaseAltMedium}" />
        <SolidColorBrush x:Key="SettingsMenuPointerSelectedBackgroundBrush" Color="{StaticResource ChromeAltHigh}" />
        <SolidColorBrush x:Key="SettingsMenuSelectedBackgroundBrush" Color="{StaticResource AltAltMedium}" />

        <SolidColorBrush x:Key="SettingsMenuForegroundBrush" Color="{StaticResource BaseMediumHigh}" />
        <SolidColorBrush x:Key="SettingsMenuPointerOverForegroundBrush" Color="{StaticResource BaseHigh}" />
        <SolidColorBrush x:Key="SettingsMenuPressedForegroundBrush" Color="{StaticResource ChromeHigh}" />
        <SolidColorBrush x:Key="SettingsMenuDisabledForgroundBrush" Color="{StaticResource BaseAltMedium}" />

        <!-- About Page -->
        <SolidColorBrush x:Key="DividerBorderBrush" Color="{StaticResource ChromeMediumLow}" />
        <SolidColorBrush x:Key="AadUpsellBackgroundBrush" Color="{StaticResource ChromeMedium}" />
        <SolidColorBrush x:Key="UpdatesTextBrush" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="CheckingForUpdatesProgressRingBrush" Color="{StaticResource BaseHigh}"/>

        <!--People Picker-->
        <SolidColorBrush x:Key="PersonTileBorderBrush" Color="{StaticResource AltMediumLow}"/>
        <SolidColorBrush x:Key="PersonTileHCBorderBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="DeletePersonButtonBackgroundBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="DeletePersonButtonForegroundBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="PersonTileTextForegroundBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="PersonTileBackgroundBrush" Color="{StaticResource ChromeHigh}"/>
        <SolidColorBrush x:Key="SearchBoxBackgroundBrush" Color="{StaticResource AltHigh}" Opacity="0.4"/>

        <!--Error Banners-->
        <SolidColorBrush x:Key="ErrorBannerBackgroundBrush" Color="{StaticResource ChromeHigh}"/>
        <SolidColorBrush x:Key="ErrorBannerPointerOverBorderBrush" Color="{StaticResource AltLow}"/>
        <SolidColorBrush x:Key="ErrorBannerBorderBrushHC" Color="Transparent"/>
        <SolidColorBrush x:Key="ErrorBannerUserActionMessageBrush" Color="{StaticResource BaseMediumLow}"/>
        <SolidColorBrush x:Key="ErrorBannerDescriptionBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="ErrorBannerCloseButtonBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="ErrorBannerBorderFocussedBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="ErrorBannerWarningAccentBrush" Color="{StaticResource ErrorMedium}"/>
        <SolidColorBrush x:Key="ErrorBannerCriticalAccentBrush" Color="{StaticResource ErrorHigh}"/>
        <SolidColorBrush x:Key="ErrorBannerInformativeAccentBrush" Color="{StaticResource ErrorInformative}"/>

        <!--Signed out-->
        <SolidColorBrush x:Key="SignedOutTextBlockForegroundBrush" Color="{StaticResource BaseAltMedium}"/>

        <!--Privacy settings-->
        <SolidColorBrush x:Key="PrivacySettingsForegroundBrush" Color="{StaticResource BaseAltMedium}"/>

        <!-- Give Feedback Page -->
        <SolidColorBrush x:Key="FeedbackInputTextBoxBorderBrush" Color="{StaticResource BaseHigh}" Opacity="0.05"/>
        <SolidColorBrush x:Key="FeedbackInputTextBoxBackgroundBrush" Color="{StaticResource ChromeLow}"/>

        <!-- Language Pages -->
        <SolidColorBrush x:Key="LanguageAltTextForegroundBrush" Color="{StaticResource BaseAltMedium}" />

        <!--Menus-->
        <SolidColorBrush x:Key="MenuFlyoutBackgroundBrush" Color="{StaticResource ChromeHigh}"/>
        <SolidColorBrush x:Key="MenuFlyoutItemForegroundBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="MenuFlyoutItemForegroundPointerOverBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="MenuFlyoutItemForegroundDisabledBrush" Color="{StaticResource ChromeAltMedium}"/>
        <SolidColorBrush x:Key="MenuFlyoutItemBackgroundBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="MenuFlyoutItemBackgroundPointerOverBrush" Color="{StaticResource ChromeMedium}"/>
        <SolidColorBrush x:Key="MenuFlyoutItemBackgroundPressedBrush" Color="{StaticResource ChromeMediumHigh}"/>
        <SolidColorBrush x:Key="MenuFlyoutItemIconBackgroundBrush" Color="{StaticResource BaseMediumHigh}"/>

        <!--Adaptive Cards-->
        <SolidColorBrush x:Key="AdaptiveInputBackgroundBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="AdaptiveInputBackgroundPointerOverBrush" Color="{StaticResource ChromeMediumHigh}"/>
        <SolidColorBrush x:Key="AdaptiveInputBorderBrush" Color="{StaticResource ChromeAltHigh}"/>
        <SolidColorBrush x:Key="AdaptiveInputBorderDisabledBrush" Color="{StaticResource BaseLow}"/>
        <SolidColorBrush x:Key="AdaptiveInputBorderHighContrastBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="AdaptiveInputBorderPointerOverBrush" Color="{StaticResource BaseMedium}"/>
        <SolidColorBrush x:Key="AdaptiveInputBorderFocusedBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="AdaptiveInputInnerBorderFocusedBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="AdaptiveInputBorderPointerOverHighContrastBrush" Color="{StaticResource ChromeMediumHigh}"/>
        <SolidColorBrush x:Key="AdaptiveInputForegroundBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="AdaptiveInputButtonForegroundBrush" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="AdaptiveInputForegroundDisabledBrush" Color="{StaticResource ChromeAltMedium}"/>
        <SolidColorBrush x:Key="AdaptiveInputSelectionHighlightBrush" Color="{StaticResource ChromeAltLow}"/>

        <SolidColorBrush x:Key="AdaptiveDropDownBackgroundBrush" Color="{StaticResource ChromeHigh}"/>
        <SolidColorBrush x:Key="AdaptiveDropDownBackgroundPointerOverBrush" Color="{StaticResource ChromeMediumLow}"/>
        <SolidColorBrush x:Key="AdaptiveDropDownBackgroundSelectedBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="AdaptiveDropDownBackgroundSelectedPointerOverBrush" Color="{StaticResource BaseLow}"/>
        <SolidColorBrush x:Key="AdaptiveDropDownForegroundPointerOverBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="AdaptiveDropDownBorderBrush" Color="{StaticResource ChromeHigh}"/>
        <SolidColorBrush x:Key="AdaptiveDropDownBorderPointerOverBrush" Color="{StaticResource ChromeMediumLow}"/>
        <SolidColorBrush x:Key="AdaptiveDropDownBorderSelectedOverBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="AdaptiveDropDownBorderSelectedPointerOverBrush" Color="{StaticResource BaseLow}"/>

        <SolidColorBrush x:Key="AdaptiveCalendarCalendarItemBackgroundBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="AdaptiveCalendarSelectedCalendarItemBorderBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="AdaptiveCalendarOutOfScopeItemBackgroundBrush" Color="{StaticResource ChromeMedium}"/>

        <SolidColorBrush x:Key="AdaptiveTimePickerForegroundFocusedPointerOverBrush" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="AdaptiveTimePickerBackgroundFocusedPointerOverBrush" Color="{StaticResource ChromeMediumHigh}"/>

        <!--SuggestionScrollBar-->
        <SolidColorBrush x:Key="SuggestionButtonPillBorderBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="SuggestionButtonPillBackgroundBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="SuggestionButtonForegroundBrush" Color="{StaticResource BaseMediumHigh}"/>

        <SolidColorBrush x:Key="SuggestionButtonBackgroundPointerOverBrush" Color="{StaticResource ChromeMediumLow}"/>
        <SolidColorBrush x:Key="SuggestionButtonBorderPointerOverBrush" Color="{StaticResource ChromeMediumLow}"/>
        <SolidColorBrush x:Key="SuggestionButtonPillBorderPointerOverBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="SuggestionButtonForegroundPointerOverBrush" Color="{StaticResource BaseMediumHigh}"/>

        <SolidColorBrush x:Key="SuggestionButtonBackgroundPointerPressedBrush" Color="{StaticResource BaseLow}"/>
        <SolidColorBrush x:Key="SuggestionButtonBorderPointerPressedBrush" Color="{StaticResource BaseLow}"/>
        <SolidColorBrush x:Key="SuggestionButtonForegroundPointerPressedBrush" Color="{StaticResource BaseMediumHigh}"/>

        <SolidColorBrush x:Key="SuggestionButtonBackgroundDisabledBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="SuggestionButtonPillBackgroundDisabledBrush" Color="{StaticResource ChromeLow}"/>
        <SolidColorBrush x:Key="SuggestionButtonBorderDisabledBrush" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="SuggestionButtonPillBorderDisabledBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="SuggestionButtonForegroundDisabledBrush" Color="{StaticResource BaseMediumHigh}"/>

        <SolidColorBrush x:Key="SuggestionBarBackgroundBrush" Color="{StaticResource AltHigh}"/>

        <!--Beta icon-->
        <SolidColorBrush x:Key="BetaIconBackgroundBrush" Color="{StaticResource ChromeMedium}"/>
        <SolidColorBrush x:Key="BetaIconBorderBrush" Color="{StaticResource ChromeMedium}"/>

        <!--Overriden default colors - DO NOT CHANGE THESE NAMES-->

        <!--This brush has been overridden for the Time Picker Flyout Presenter. We can't get proper access to override the entire style in the adaptive card so this is a work around.-->
        <SolidColorBrush x:Key="TimePickerFlyoutPresenterHighlightFill" Color="{StaticResource ChromeMedium}"/>

        <!--These brushes have been overriden for the toggle switch to match the designs without requiring to override the entire style.-->
        <SolidColorBrush x:Key="ToggleSwitchFillOn" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="ToggleSwitchFillOnPointerOver" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="ToggleSwitchFillOnPressed" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="ToggleSwitchFillOnDisabled" Color="{StaticResource BaseLow}"/>

        <SolidColorBrush x:Key="ToggleSwitchStrokeOff" Color="{StaticResource BaseMediumHigh}"/>
        <SolidColorBrush x:Key="ToggleSwitchStrokeOffPointerOver" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="ToggleSwitchStrokeOffPressed" Color="{StaticResource BaseAltMedium}"/>
        <SolidColorBrush x:Key="ToggleSwitchStrokeOffDisabled" Color="{StaticResource BaseLow}"/>

        <SolidColorBrush x:Key="ToggleSwitchKnobFillOn" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="ToggleSwitchKnobFillOnPointerOver" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="ToggleSwitchKnobFillOnPressed" Color="{StaticResource AltHigh}"/>
        <SolidColorBrush x:Key="ToggleSwitchKnobFillOnDisabled" Color="{StaticResource AltHigh}"/>

        <SolidColorBrush x:Key="ToggleSwitchKnobFillOff" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="ToggleSwitchKnobFillOffPointerOver" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="ToggleSwitchKnobFillOffPressed" Color="{StaticResource BaseHigh}"/>
        <SolidColorBrush x:Key="ToggleSwitchKnobFillOffDisabled" Color="{StaticResource BaseHigh}"/>

        <!-- Brushes for the error image-->
        <SolidColorBrush x:Key="ErrorImageExclamationFillBrush" Color="{StaticResource ErrorImageExclamationColor}"/>
        <SolidColorBrush x:Key="ErrorImageExclamationOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="ErrorImageExclamationGreyscaleFillBrush" Color="{StaticResource ErrorImageExclamationGreyscaleColor}"/>
        <SolidColorBrush x:Key="ErrorImageExclamationGreyscaleOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="ErrorImageTriangleFillBrush" Color="{StaticResource ErrorImageTriangleColor}"/>
        <SolidColorBrush x:Key="ErrorImageTriangleOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="ErrorImageTriangleGreyscaleFillBrush" Color="{StaticResource ErrorImageTriangleGreyscaleColor}"/>
        <SolidColorBrush x:Key="ErrorImageTriangleGreyscaleOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="ErrorImageMotionLinesFillBrush" Color="{StaticResource ErrorImageMotionLinesColor}"/>
        <SolidColorBrush x:Key="ErrorImageMotionLinesOutlineBrush" Opacity="0"/>

        <!-- Brushes for Speech logging consent image-->
        <SolidColorBrush x:Key="SpeechLoggingConsentCircleFillBrush" Color="{StaticResource SpeechLoggingConsentCircleFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentCircleOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentHandLeftFillBrush" Color="{StaticResource SpeechLoggingConsentHandFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentHandLeftOutlineBrush" Opacity="0"/>

        <LinearGradientBrush x:Key="SpeechLoggingConsentArmLeftFillBrush" MappingMode="Absolute" StartPoint="89.506,38.403" EndPoint="124.123,79.400">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0.00" Color="{ThemeResource SpeechLoggingConsentClothFillShadowColor}"/>
                <GradientStop Offset="0.35" Color="{ThemeResource SpeechLoggingConsentClothFillLightShadowColor}"/>
                <GradientStop Offset="0.68" Color="{ThemeResource SpeechLoggingConsentClothFillColor}"/>
            </LinearGradientBrush.GradientStops>
            <LinearGradientBrush.Transform>
                <MatrixTransform Matrix="1.000,0.000,-0.000,-1.000,-1.012,152.181" />
            </LinearGradientBrush.Transform>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="SpeechLoggingConsentArmLeftOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentHairFillBrush" Color="{StaticResource SpeechLoggingConsentHairFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentHairOutlineBrush" Opacity="0"/>

        <LinearGradientBrush x:Key="SpeechLoggingConsentTorsoFillBrush" MappingMode="Absolute" StartPoint="52.020,23.541" EndPoint="92.279,56.666">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0.00" Color="{ThemeResource SpeechLoggingConsentClothFillShadowColor}"/>
                <GradientStop Offset="0.58" Color="{ThemeResource SpeechLoggingConsentClothFillColor}"/>
            </LinearGradientBrush.GradientStops>
            <LinearGradientBrush.Transform>
                <MatrixTransform Matrix="1.000,0.000,-0.000,-1.000,-1.012,152.181" />
            </LinearGradientBrush.Transform>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="SpeechLoggingConsentTorsoOutlineBrush" Opacity="0"/>

        <LinearGradientBrush x:Key="SpeechLoggingConsentNeckFillBrush" MappingMode="Absolute" StartPoint="72.360,99.567" EndPoint="71.553,77.410">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0.00" Color="{ThemeResource SpeechLoggingConsenNeckShadowFillColor}"/>
                <GradientStop Offset="0.67" Color="{ThemeResource SpeechLoggingConsentSkinFillColor}"/>
            </LinearGradientBrush.GradientStops>
            <LinearGradientBrush.Transform>
                <MatrixTransform Matrix="1.000,0.000,-0.000,-1.000,-60.557,101.611" />
            </LinearGradientBrush.Transform>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="SpeechLoggingConsentNeckOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentHeadFillBrush" Color="{StaticResource SpeechLoggingConsentSkinFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentHeadOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentMouthFillBrush" Color="{StaticResource SpeechLoggingConsentMouthFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentEyeFillBrush" Color="{StaticResource SpeechLoggingConsentEyeFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentEarringFillBrush" Color="{StaticResource SpeechLoggingConsentBookAndEarringFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentBookSideFillBrush" Color="{StaticResource SpeechLoggingConsentBookAndEarringFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentBookSideOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentBookFrontFillBrush" Color="{StaticResource SpeechLoggingConsentBookFrontFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentBookFrontOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentArmRightFillBrush" Color="{StaticResource SpeechLoggingConsentClothFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentArmRightOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentHandRightFillBrush" Color="{StaticResource SpeechLoggingConsentHandFillColor}"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentHandrightOutlineBrush" Opacity="0"/>
        <SolidColorBrush x:Key="SpeechLoggingConsentStarFillBrush" Color="{StaticResource SpeechLoggingConsentClothFillShadowColor}"/>
    <SolidColorBrush x:Key="SpeechLoggingConsentStarOutlineBrush" Opacity="0"/>

    <!--Color Palette-->

    <Color x:Key="AltHigh">White</Color>
        <Color x:Key="AltAltHigh">#222222</Color>
        <Color x:Key="AltHighTransparent">Transparent</Color>
        <Color x:Key="AltMediumHigh">#F2F2F2</Color>
        <Color x:Key="AltMedium">#737373</Color>
        <Color x:Key="AltAltMedium">#D2D2D2</Color>
        <Color x:Key="AltMediumDark">#E6E6E6</Color>
        <Color x:Key="AltMediumLow">#E6E6E6</Color>
        <Color x:Key="AltLow">Transparent</Color>
        <Color x:Key="AltAltLow">White</Color>

        <Color x:Key="BaseHigh">Black</Color>
        <Color x:Key="BaseAltHigh">#2F2F2F</Color>
        <Color x:Key="BaseHighTransparent">#00000000</Color>
        <Color x:Key="BaseMediumHigh">#252424</Color>
        <Color x:Key="BaseMedium">#2F2F2F</Color>
        <Color x:Key="BaseAltMedium">#737373</Color>
        <Color x:Key="BaseMediumLow">#737373</Color>
        <Color x:Key="BaseLow">#D2D2D2</Color>
        <Color x:Key="BaseAltLow">#D2D2D2</Color>

        <Color x:Key="ChromeHigh">#FFFFFF</Color>
        <Color x:Key="ChromeAltHigh">#949494</Color>
        <Color x:Key="ChromeMediumHigh">#E6E6E6</Color>
        <Color x:Key="ChromeMedium">#F2F2F2</Color>
        <Color x:Key="ChromeMediumTransparent">#00F2F2F2</Color>
        <Color x:Key="ChromeAltMedium">#737373</Color>
        <Color x:Key="ChromeMediumDark">White</Color>
        <Color x:Key="ChromeMediumLow">#E6E6E6</Color>
        <Color x:Key="ChromeLow">#F2F2F2</Color>
        <Color x:Key="ChromeAltLow">#2F2F2F</Color>

        <Color x:Key="CortanaAccent">#00AEEF</Color>
        <Color x:Key="CortanaAccentLow">#0078D7</Color>

        <Color x:Key="ErrorHigh">#D83B01</Color>
        <Color x:Key="ErrorMedium">#FFB900</Color>
        <Color x:Key="ErrorInformative">#0078D4</Color>

        <Color x:Key="ErrorImageExclamationColor">#F7B647</Color>
        <Color x:Key="ErrorImageExclamationGreyscaleColor">#FFFFFF</Color>
        <Color x:Key="ErrorImageTriangleColor">#FFD590</Color>
        <Color x:Key="ErrorImageTriangleGreyscaleColor">#C8C6C4</Color>
        <Color x:Key="ErrorImageMotionLinesColor">#E1DFDD</Color>

        <!-- Colors for Speech logging consent image-->
        <Color x:Key="SpeechLoggingConsentCircleFillColor">#FFCBEEFB</Color>
        <Color x:Key="SpeechLoggingConsentHandFillColor">#FFBE8E67</Color>
        <Color x:Key="SpeechLoggingConsentClothFillShadowColor">#FFF6B446</Color>
        <Color x:Key="SpeechLoggingConsentClothFillLightShadowColor">#FFFAC46B</Color>
        <Color x:Key="SpeechLoggingConsentClothFillColor">#FFFFD48F</Color>
        <Color x:Key="SpeechLoggingConsentHairFillColor">#FF312F2B</Color>
        <Color x:Key="SpeechLoggingConsenNeckShadowFillColor">#FF956541</Color>
        <Color x:Key="SpeechLoggingConsentSkinFillColor">#FFBC8D66</Color>
        <Color x:Key="SpeechLoggingConsentMouthFillColor">#FF9A623B</Color>
        <Color x:Key="SpeechLoggingConsentEyeFillColor">#FF39302D</Color>
        <Color x:Key="SpeechLoggingConsentBookAndEarringFillColor">#FFE0DEDC</Color>
    <Color x:Key="SpeechLoggingConsentBookFrontFillColor">#FFC7C5C3</Color>
    
</ResourceDictionary>
